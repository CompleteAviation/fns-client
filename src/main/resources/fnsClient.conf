 
## jms config
jms.initialContextFactory="com.solacesystems.jndi.SolJNDIInitialContextFactory"
jms.providerUrl="JMS_PROVIDER_URL"
jms.username="JMS_USERNAME"
jms.password="JMS_PASSWORD"
jms.solace.messageVpn="SCDS_MESSAGE_VPN"
jms.solace.sslTrustStore="conf/cacerts"
jms.solace.jndiConnectionRetries=-1
### additional JNDI Properties can be set if so desired.
# jms.additionalJndiProperties=[
#     ["PROP_A_NAME","PROP_A_VALUE"],
#     ["PROP_B_NAME","PROP_B_VALUE"]]
jms.connectionFactory="CONNECTION_FACTORY_NAME"
jms.destination="QUEUE_NAME"
jms.messageProcessor.processingThreads=4

## fil config
fil.sftp.host=
fil.sftp.port=22
fil.sftp.username= #FIL username
fil.sftp.strictHostKeyChecking=no
fil.sftp.knownHostsFilePath="" #required if strictHostKeyChecking is set to yes
fil.sftp.certFilePath="PATH/TO/FIL/AUTH/CERT"
fil.sftp.filFileSavePath="" ## directory where FIL File will be downloaded to

## Database config: Only one shoud be used, the other shoudl be commented out.
## h2 database config
notamDb.driver="org.h2.Driver"
notamDb.connectionUrl="jdbc:h2:./Notams;mode=MySQL;AUTO_SERVER=TRUE"
notamDb.username=""
notamDb.password=""
notamDb.schema="PUBLIC"
notamDb.table="NOTAMS"
notamDb.maxResponseCount=1000

### postgres database config
# notamDb.driver="org.postgresql.Driver"
# notamDb.connectionUrl="jdbc:postgresql://POSTGRESQL_SERVER"
# notamDb.username="POSTGRESQL_USERNAME"
# notamDb.password="POSTGRESQL_PASSWORD"
# notamDb.schema="POSTGRESQL_SCHEMA"
# notamDb.table="POSTGRESQL_NOTAM_TABLE"


## Missed Message Tracker Config
### Missed Message Tracker Scheduel Rate: Rate at which the client should check for missed and stale message from the JMS service
messageTracker.scheduleRate=10 #seconds
### Missed Message Trigger Time: How long before a messages should be flagged as missed, once a message is missed the database will be reitizlied via FIL
messageTracker.missedMessageTriggerTime=5 #minutes
### Stale Message Trigger Time: How long to wait for a message before reitizlizing via FIL
messageTracker.staleMessageTriggerTime=10 #minutes


## rest api
restapi.enabled=true
restapi.port=8080