 
## fnsClient config
### Missed Message Tracker Scheduel Rate: Rate at which the client should check for missed and stale message from the JMS service
fnsClient.messageTracker.scheduleRate=10 #seconds
### Missed Message Trigger Time: How long before a messages should be flagged as missed, once a message is missed the database will be reitizlied via FIL
fnsClient.messageTracker.missedMessageTriggerTime=5 #minutes
### Stale Message Trigger Time: How long to wait for a message before reitizlizing via FIL
fnsClient.messageTracker.staleMessageTriggerTime=10 #minutes

## scds config
jms.destination="SCDS_QUEUE_NAME"
jms.connectionFactory="SCDS_CONNECTION_FACTORY_NAME"
jms.jndiProperties=[
    [java.naming.factory.initial,com.solacesystems.jndi.SolJNDIInitialContextFactory],
    [java.naming.provider.url,"SCDS_CONNECTION_URL"],
    [java.naming.security.principal,"SCDS_USERNAME"],
    [java.naming.security.credentials,"SCDS_PASSWORD"],
    [Solace_JMS_VPN,"SCDS_MESSAGE_VPN"],
    [Solace_JMS_SSL_TrustStore,"conf/cacerts"],
    [Solace_JMS_JNDI_ConnectRetries,-1]]
jms.messageProcessor.processingThreads=4

## Database config: Only one shoud be used, the other shoudl be commented out.
## h2 database config
notamDb.driver="org.h2.Driver"
notamDb.connectionUrl="jdbc:h2:./Notams;mode=MySQL;AUTO_SERVER=TRUE"
notamDb.username=""
notamDb.password=""
notamDb.schema="PUBLIC"
notamDb.table="NOTAMS"

### postgres database config
# notamDb.driver="org.postgresql.Driver"
# notamDb.connectionUrl="jdbc:postgresql://POSTGRESQL_SERVER"
# notamDb.username="POSTGRESQL_USERNAME"
# notamDb.password="POSTGRESQL_PASSWORD"
# notamDb.schema="POSTGRESQL_SCHEMA"
# notamDb.table="POSTGRESQL_NOTAM_TABLE"


## fil config
fil.source="sftp"
fil.sftp.host=
fil.sftp.port=22
fil.sftp.username= #FIL username
fil.sftp.strictHostKeyChecking=no
fil.sftp.knownHostsFilePath="" #required if strictHostKeyChecking is set to yes
fil.sftp.certFilePath="PATH/TO/FIL/AUTH/CERT"
fil.sftp.filFileDirectoryPath="" ## directory where FIL File will be downloaded to

## rest api
restapi.enabled=true
restapi.port=8080